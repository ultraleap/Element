intrinsic function add(a, b)
intrinsic function sub(a, b)

pi = 3.14

addThree(a, b, c) = add(a, add(b, c))
addFive(a, b, c, d, e)
{
	cd = add(c, d)
	abcd = add(add(a, b), cd)
	return = add(abcd, e)
}

recurse(a) = recurse(a)

recurseIndirect(a) = recurseIndirectOther(a)
recurseIndirectOther(a) = recurseIndirect(a)

selfReferencingLocalWithOuter
{
    pi = pi # Skips direct recursion and refers to pi in the outer scope
    return = pi
}

selfReferencingLocal
{
    loc = loc
    return = loc
}

# This shouldn't be found by return in funcWithLookupError!
myId = 10
funcWithLookupError
{
    myId = add(lookupError, 5)
    return = myId
}
